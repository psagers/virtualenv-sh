#!/bin/sh


typeset env_name="$1"
if [ -z "$env_name" ]; then
    lsvirtualenvs
    return 1
fi

activate="$WORKON_HOME/$env_name/$VIRTUALENVWRAPPER_ENV_BIN_DIR/activate"
if [ ! -f "$activate" ]; then
    echo "ERROR: '$WORKON_HOME/$env_name' does not exist." >&2
    return 1
fi

if type deactivate >/dev/null 2>&1; then
    deactivate
fi

virtualenv-sh-run-hook "preactivate" "$env_name"

source "$activate"

# Save the deactivate function from virtualenv under a different name
virtualen_sh_original_deactivate=`typeset -f deactivate | sed 's/deactivate/virtualenv_deactivate/g'`
eval "$virtualen_sh_original_deactivate"
unset -f deactivate >/dev/null 2>&1

# Replace the deactivate() function with a wrapper.
eval 'deactivate () {
    # Call the local hook before the global so we can undo
    # any settings made by the local postactivate first.
    virtualenv-sh-run-hook "predeactivate"
    
    env_postdeactivate_hook="$VIRTUAL_ENV/$VIRTUALENVWRAPPER_ENV_BIN_DIR/postdeactivate"
    old_env=$(basename "$VIRTUAL_ENV")
    
    # Call the original function.
    virtualenv_deactivate $1

    virtualenv-sh-run-hook "postdeactivate" "$old_env"

    # Remove this function
    unset -f virtualenv_deactivate >/dev/null 2>&1
    unset -f deactivate >/dev/null 2>&1
}'

virtualenv-sh-run-hook "postactivate"
